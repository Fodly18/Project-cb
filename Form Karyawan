import Koneksi.Conek;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

public class JabatanKaryawan extends javax.swing.JFrame {
private String currentEmployeeId;
private javax.swing.JLabel tglKeterima;
String Tanggal;

     
    public JabatanKaryawan() {
        initComponents();
        datatable();
    }
    
    private void selectEmployee(String employeeId) {
    this.currentEmployeeId = employeeId;

    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    try {
        connection = Conek.configDB();
        
        String sql = "SELECT nama, tglketerima, jabatan, gaji FROM karyawan WHERE id=?";
        
        preparedStatement = connection.prepareStatement(sql);
        preparedStatement.setString(1, employeeId);

        resultSet = preparedStatement.executeQuery();
        
        if (resultSet.next()) {
            txtnama.setText(resultSet.getString("nama"));
            
            String tglKeterimaStr = resultSet.getString("tglketerima");
            java.util.Date tglKeterimaDate = new SimpleDateFormat("yyyy-MM-dd").parse(tglKeterimaStr);
            tanggal.setDate(tglKeterimaDate);
            
            jComboBox1.setSelectedItem(resultSet.getString("jabatan"));
            txtgaji.setText(resultSet.getString("gaji"));
        } else {
            JOptionPane.showMessageDialog(this, "Karyawan tidak ditemukan.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error saat mengambil data karyawan: " + e.getMessage());
    } finally {
       
        try {
            if (resultSet != null) {
                resultSet.close();
            }
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saat menutup koneksi: " + e.getMessage());
        }
    }
}

    public void datatable(){
        DefaultTableModel tbl=new DefaultTableModel();
        tbl.addColumn("Id_Karyawan");
        tbl.addColumn("Nama Karyawan");
        tbl.addColumn("Tgl_Keterima");
        tbl.addColumn("Jabatan");
        tbl.addColumn("Gaji");
        tabel.setModel(tbl);
        try{
            Statement statement=(Statement)Conek.configDB().createStatement();
            ResultSet res=statement.executeQuery("SELECT * FROM karyawan");
            while(res.next())
            {
                tbl.addRow(new Object[]{
                    res.getString("id"),
                    res.getString("nama"),
                    res.getString("tglketerima"),
                    res.getString("jabatan"),
                    res.getString("gaji")
                });
            }
        }catch (Exception e){
             JOptionPane.showMessageDialog(rootPane,"salah pada datatable");
        }
    }

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        txtsearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        login = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        persegi_di_bawh_admin1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        tanggal = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtnama = new javax.swing.JTextField();
        txtgaji = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        btn_hapus = new javax.swing.JButton();
        btn_simpan = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btncari = new javax.swing.JButton();
        txtgaji1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 350, 20));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/—Pngtree—avatar icon profile icon member_5247852 3.png"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 50, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/[removal 35.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 190, 130));

        jButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Group 1.png"))); // NOI18N
        jButton26.setBorderPainted(false);
        jButton26.setContentAreaFilled(false);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, -1, 40));

        login.setBackground(new java.awt.Color(255, 51, 51));
        login.setText("LOGOUT");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 160, 30));

        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Group 4 (2).png"))); // NOI18N
        jButton31.setBorderPainted(false);
        jButton31.setContentAreaFilled(false);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, 40));

        jButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Group 6.png"))); // NOI18N
        jButton33.setBorderPainted(false);
        jButton33.setContentAreaFilled(false);
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, -1, 40));

        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Group 5.png"))); // NOI18N
        jButton30.setBorderPainted(false);
        jButton30.setContentAreaFilled(false);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, 40));

        persegi_di_bawh_admin1.setBackground(new java.awt.Color(255, 204, 204));
        persegi_di_bawh_admin1.setForeground(new java.awt.Color(255, 204, 204));
        persegi_di_bawh_admin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Rectangle 109.png"))); // NOI18N
        getContentPane().add(persegi_di_bawh_admin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 530));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setForeground(new java.awt.Color(255, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Kasir" }));
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 210, -1));
        jPanel2.add(tanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 210, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Admin");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, -1, 20));

        jLabel21.setText("Nama");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, -1));

        jLabel24.setText("Tanggal Diterima");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        jLabel19.setText("Jabatan");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, -1, -1));

        jLabel20.setText("Gaji");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, -1, -1));
        jPanel2.add(txtnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 210, -1));

        txtgaji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgajiActionPerformed(evt);
            }
        });
        jPanel2.add(txtgaji, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 210, -1));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nama", "Tanggal Diterima", "Jabatan", "Gaji"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 590, 230));

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        jPanel2.add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, -1));

        btn_simpan.setText("Simpan");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        jPanel2.add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 190, -1, -1));

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        jPanel2.add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, -1, -1));

        btncari.setText("Cari");
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });
        jPanel2.add(btncari, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 60, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 530));

        txtgaji1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgaji1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtgaji1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 210, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {                                           
           if (tanggal.getDate() != null) {
        String p = "yyyy-MM-dd";
        SimpleDateFormat sd = new SimpleDateFormat(p);
        Tanggal = sd.format(tanggal.getDate());
    }

    String Nama = txtnama.getText();
    String Jabatan = (String) jComboBox1.getSelectedItem();
    String Gaji = txtgaji.getText();

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {   
        connection = Conek.configDB();   
        
        String sql = "INSERT INTO karyawan (nama, tglketerima, jabatan, gaji) VALUES (?, ?, ?, ?)";
        
        preparedStatement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        
        preparedStatement.setString(1, Nama);
        preparedStatement.setString(2, Tanggal);
        preparedStatement.setString(3, Jabatan);
        preparedStatement.setString(4, Gaji);
        
        preparedStatement.executeUpdate();
        
        ResultSet rs = preparedStatement.getGeneratedKeys();
        int idKaryawan = -1;
        if (rs.next()) {
            idKaryawan = rs.getInt(1);
        }

        preparedStatement.close();

        JOptionPane.showMessageDialog(null, "Data Berhasil tersimpan");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal disimpan: " + e.getMessage());
    } finally {
        
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            // Menangani kesalahan saat menutup koneksi
            JOptionPane.showMessageDialog(null, "Error saat menutup koneksi: " + e.getMessage());
        }
    }
    
   
    datatable();

    }                                          

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {                                          
   int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data karyawan?", "Konfirmasi Hapus Data Karyawan", JOptionPane.YES_NO_OPTION);
if (confirm == JOptionPane.YES_OPTION) {
    
    Connection connection = null;
    PreparedStatement preparedStatementKaryawan = null;

    try {
       
        connection = Conek.configDB();
        
      
        String sqlKaryawan = "DELETE FROM karyawan WHERE id=?";
        preparedStatementKaryawan = connection.prepareStatement(sqlKaryawan);
        preparedStatementKaryawan.setString(1, currentEmployeeId);
        
        
        preparedStatementKaryawan.executeUpdate();
        
        JOptionPane.showMessageDialog(this, "Data Karyawan Berhasil Dihapus");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error saat menghapus data karyawan: " + e.getMessage());
    } finally {
        
        try {
            if (preparedStatementKaryawan != null) {
                preparedStatementKaryawan.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error saat menutup koneksi: " + e.getMessage());
        }
    }
    
    // Memperbarui tabel data
    datatable();
}
   
    }                                         

    private void txtgajiActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    
    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {                                        
        DefaultTableModel cari=(DefaultTableModel) tabel.getModel();
        TableRowSorter<DefaultTableModel> obj=new TableRowSorter<>(cari);
        tabel.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }                                       

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {                                      
        // TODO add your handling code here:
        DefaultTableModel cari=(DefaultTableModel) tabel.getModel();
        TableRowSorter<DefaultTableModel> obj=new TableRowSorter<>(cari);
        tabel.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }                                     

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {                                         
      if (tanggal.getDate() != null) {
        String p = "yyyy-MM-dd";
        SimpleDateFormat sd = new SimpleDateFormat(p);
        Tanggal = sd.format(tanggal.getDate());
    }

    String Nama = txtnama.getText();
    String Jabatan = (String) jComboBox1.getSelectedItem();
    String Gaji = txtgaji.getText();

    Connection connection = null;
    PreparedStatement preparedStatement = null;

    try {
        
        connection = Conek.configDB();
       
        String sql = "UPDATE karyawan SET nama=?, tglketerima=?, jabatan=?, gaji=? WHERE id=?";
        
        preparedStatement = connection.prepareStatement(sql);
        
        preparedStatement.setString(1, Nama);
        preparedStatement.setString(2, Tanggal);
        preparedStatement.setString(3, Jabatan);
        preparedStatement.setString(4, Gaji);
        preparedStatement.setString(5, currentEmployeeId);  // Menggunakan variabel kelas untuk id
        
        preparedStatement.executeUpdate();

        preparedStatement.close();
        
        JOptionPane.showMessageDialog(this, "Berhasil Dirubah");
    } catch (SQLException e) {
        
        JOptionPane.showMessageDialog(null, "Error saat menambahkan " + e.getMessage());
    } finally {
        
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
           
            JOptionPane.showMessageDialog(null, "Error saat menutup koneksi: " + e.getMessage());
        }
    }
    
    
    datatable();
    }                                        

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setVisible(false);
        new Dashboard_admin().setVisible(true);
    }                                         

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {                                      
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?", "Konfirmasi Logout", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        this.setVisible(false);
        new login_admin().setVisible(true);
    }
    }                                     

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setVisible(false);
        new Dashboard_admin
        ().setVisible(true);
    }                                         

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        this.setVisible(false);
        new JabatanKaryawan().setVisible(true);
    }                                         

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        this.setVisible(false);
        new laporanSupervisor().setVisible(true);
    }                                         

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {                                   
       int row = tabel.getSelectedRow();
    String selectedEmployeeId = tabel.getModel().getValueAt(row, 0).toString(); // Asumsikan kolom pertama adalah ID
    selectEmployee(selectedEmployeeId);
    }                                  

    private void txtgaji1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JabatanKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JabatanKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JabatanKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JabatanKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JabatanKaryawan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btncari;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton33;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton login;
    private javax.swing.JLabel persegi_di_bawh_admin1;
    private javax.swing.JTable tabel;
    private com.toedter.calendar.JDateChooser tanggal;
    private javax.swing.JTextField txtgaji;
    private javax.swing.JTextField txtgaji1;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration                   

    
}
